<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="review">
	
	<resultMap type="mybatis.vo.ReviewVO" id="map1">
		<id column="r_idx" property="r_idx"/>
		<collection property="c_list" select="commList" column="r_idx" ofType="mybatis.vo.CommVO"/>
	</resultMap>
	
	<!-- 특정 원글의 기본키를 조건으로 하여 해당 댓글을 조회하는 기능 -->
	<select id="commList" parameterType="String" resultType="mybatis.vo.CommVO">
		SELECT * FROM comment_t WHERE r_idx = #{r_idx}
	</select>
	
	<!-- 사용자가 원글의 목록을 호출할 때 사용되는 목록(list) 기능 -->
	<select id="reviewList" parameterType="java.util.Map" resultMap="map1">
		SELECT * FROM(
			SELECT rownum r_num, a.* FROM(
				SELECT * FROM review WHERE status = 0 AND bname = #{bname} ORDER BY r_idx DESC
			) a
		)
		WHERE (r_num BETWEEN #{begin} AND #{end})
		<if test="searchType != null and searchValue != null">
			<trim prefix="AND">
				<choose>
					<when test="searchType == 0">
						LOWER(laptop_name) LIKE LOWER('%'||#{searchValue}||'%')
					</when>
					<when test="searchType == 1">
						LOWER(subject) LIKE LOWER('%'||#{searchValue}||'%')
					</when>
					<when test="searchType == 2">
						to_char(writer) = #{searchValue}
					</when>
				</choose>
			</trim>
		</if>
	</select>
	
	<!-- 페이징 기법에 사용될 전체 페이지 수를 구하기 위해 전체 게시물의 수 반환 -->
	<select id="totalCount" resultType="int" parameterType="java.util.Map">
		SELECT COUNT(*) FROM review WHERE status = 0 AND bname = #{bname}
		<if test="searchType != null and searchValue != null">
			<trim prefix="AND">
				<choose>
					<when test="searchType == 0">
						LOWER(laptop_name) LIKE LOWER('%'||#{searchValue}||'%')
					</when>
					<when test="searchType == 1">
						LOWER(subject) LIKE LOWER('%'||#{searchValue}||'%')
					</when>
					<when test="searchType == 2">
						to_char(writer) = #{searchValue}
					</when>
				</choose>
			</trim>
		</if>
	</select>
	
	<!-- 원글 저장 -->
	<insert id="addReview" parameterType="mybatis.vo.ReviewVO">
		INSERT INTO review(r_idx, subject, writer, content, file_name, write_date, ip, hit, status, laptop_name, bname)
		VALUES (review_seq.NEXTVAL, #{subject}, #{writer}, #{content}, #{file_name}, sysdate, #{ip}, 0, 0, #{laptop_name}, #{bname}) 
	</insert>
	
	<!-- 보기 기능 -->
	<select id="getReview" resultMap="map1" parameterType="String">
		SELECT * FROM review WHERE r_idx = #{r_idx}
	</select>
	
	<!-- 원글 수정 -->
	<update id="editReview" parameterType="mybatis.vo.ReviewVO">
		UPDATE review
		SET
			laptop_name = #{laptop_name},
			subject = #{subject},
			content = #{content}
			<if test="file_name != null">
				, file_name = #{file_name}
			</if>
		WHERE r_idx = #{r_idx}
	</update>
	
	<!-- 원글 삭제 -->
	<update id="delReview" parameterType="String">
		UPDATE review
		SET status = 1
		WHERE r_idx = #{r_idx}
	</update>
	
	<!-- 조회수 증가 -->
	<update id="update_hit" parameterType="String">
		UPDATE review
		SET hit = hit + 1
		WHERE r_idx = #{r_idx}
	</update>
</mapper>